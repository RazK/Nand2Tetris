// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux4Way.hdl

/**
 * 4-way demultiplexor:
 * {a, b, c, d} = {in, 0, 0, 0} if sel == 00
 *                {0, in, 0, 0} if sel == 01
 *                {0, 0, in, 0} if sel == 10
 *                {0, 0, 0, in} if sel == 11
 */

CHIP DMux4Way {
    IN in, sel[2];
    OUT a, b, c, d;

    PARTS:
	// save inversed selection to identify cases
    Not(in=sel[0], out=notsel0);
	Not(in=sel[1], out=notsel1);
	
	// selected a
	And(a=notsel0, b=notsel1, out=selecteda);
	And(a=selecteda, b=in, out=a);
	
	// selected b
	And(a=sel[0], b=notsel1, out=selectedb);
	And(a=selectedb, b=in, out=b);
	
	// selected c
	And(a=notsel0, b=sel[1], out=selectedc);
	And(a=selectedc, b=in, out=c);
	
	// selected d
	And(a=sel[0], b=sel[1], out=selectedd);
	And(a=selectedd, b=in, out=d);
	
	// NOTE: Another option was using the DMux in 2 layers, but this 
	// method seemed more interesting and there were no instructions 
	// to strive for minimal Nand count.
}