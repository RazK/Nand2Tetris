// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:	
	// save inversed selection to identify cases
    Not(in=sel[0], out=notsel0);
	Not(in=sel[1], out=notsel1);
	Not(in=sel[2], out=notsel2);
	
	// selected a : 000
	And3Way(a=notsel0, b=notsel1, c=notsel2, out=selecteda);
	And(a=selecteda, b=in, out=a);
	
	// selected b : 001
	And3Way(a=sel[0], b=notsel1, c=notsel2, out=selectedb);
	And(a=selectedb, b=in, out=b);
	
	// selected c : 010
	And3Way(a=notsel0, b=sel[1], c=notsel2, out=selectedc);
	And(a=selectedc, b=in, out=c);
	
	// selected d : 011
	And3Way(a=sel[0], b=sel[1], c=notsel2, out=selectedd);
	And(a=selectedd, b=in, out=d);
	
	// selected e : 100
	And3Way(a=notsel0, b=notsel1, c=sel[2], out=selectede);
	And(a=selectede, b=in, out=e);
	
	// selected f : 101
	And3Way(a=sel[0], b=notsel1, c=sel[2], out=selectedf);
	And(a=selectedf, b=in, out=f);
	
	// selected g : 110
	And3Way(a=notsel0, b=sel[1], c=sel[2], out=selectedg);
	And(a=selectedg, b=in, out=g);
	
	// selected h : 111
	And3Way(a=sel[0], b=sel[1], c=sel[2], out=selectedh);
	And(a=selectedh, b=in, out=h);
}